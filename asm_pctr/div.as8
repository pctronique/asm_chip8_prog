; @author pctronique (progratronic) [NAULOT Ludovic]
	JP	MAIN		; Debut du code

				; --- La division ---
DIV_ASM	LD	R3, 0		; On place 0 dans le registre 3
	LD	R4, 0		; On place 0 dans le registre 4
B_DIV	SNE	R2, 0		; Si le registre 2 != 0
	RET			; On retourne au code (si la condition est fausse).
	LD	R4, R1		; On place la valeur du registre 1 vars le registre 4
	SUB	R1, R2		; R1=R1-R2
	LD	R5, #80		; On place #80 dans le registre 5
	AND	R5, R1		; R5=R5&R1
	SNE	R5, #80		; Si le registre 5 != 0
	RET			; On retourne au code (si la condition est fausse).
	ADD	R3, 1		; R3=R3+1
	JP	B_DIV		; On continue la division
		
				; --- On recupere le reste de la division ---
DIV_RES	CALL	DIV_ASM		; On fait la division
	LD	R3, R4		; on place la valeur du reste du registre 3 vers le registre 4
	RET			; On retourne au code.
	
				; --- Dessiner le la valeur en base 10 (a partir de sa valeur hexadecimal). ---
BCD_ASM	LD	R0, I		; Recupere la valeur hexadecimal dans le registre 0
	LD	R9, R0		; Place cette valeur dans le registre 9
	LD	I, CHIFFRES	; emplacement des trois chiffres
	BCD	R9		; convertie l'hexadecimal en 3 chiffres
	LD	R3, I		; Place les valeur dans les registres 0, 1 et 2
	
				; --- afficher le premier chiffre ---
	LD	F, R0		; la valeur a afficher
	DRW	RE, RD, 5		; Dessiner sur l'ecran le chiffre

				; --- afficher le deuxieme chiffre ---
	ADD	RE, 5		; Position en x => RE=RE+5
	LD	F, R1		; La valeur a afficher
	DRW	RE, RD, 5		; Dessiner sur l'ecran le chiffre

				; --- afficher le troisieme chiffre ---
	ADD	RE, 5		; Position en x => RE=RE+5
	LD	F, R2		; la valeur a afficher
	DRW	RE, RD, 5		; Dessiner sur l'ecran le chiffre
	RET			; On retourne au code.
	
				; --- Si on veut afficher le reste de la division ---
DISP_RE	LD	RC, 6		; On place 6 dans le registre C
	JP	DISP_CA		; Afficher le resultat
	
				; --- Pour afficher le resultat de la division ---
DISP_DI	LD	RC, 0		; On place 0 dans le registre C

				; --- Dessine l'equation de la division ---
DISP_CA	LD	I, CALC_A_DP	; Recupere la valeur A (en hexadecimal)
	CALL	BCD_ASM		; Dessine la valeur A (en base 10)
	ADD	RE, 5		; RE=RE+5
	
	LD	I, DIV_IMG		; Recupere l'image "/"
	ADD	I, RC		; Si le registre = 6 => Recupere l'image "%"
	DRW	RE, RD, 5		; Dessine "/" ou "%"
	ADD	RE, 5		; RE=RE+5
	
	LD	I, CALC_B_DP	; Recupere la valeur B (en hexadecimal)
	CALL	BCD_ASM		; Dessine la valeur B (en base 10)
	ADD	RE, 5		; RE=RE+5
	
	LD	I, EQU_IMG		; Recupere l'image "="
	DRW	RE, RD, 5		; Dessine "="
	ADD	RE, 5		; RE=RE+5
	
	LD	I, CALC_R_DP	; Recupere le resultat (ou le reste) (en hexadecimal)
	CALL	BCD_ASM		; Dessine le resultat (ou le reste) (en base 10)
	RET			; Revenir au code
	
				; --- Image "/" ---
DIV_IMG	DB	%00000000		;           
	DB	%00010000		;      *    
	DB	%00100000		;     *     
	DB	%01000000		;    *      
	DB	%10000000		;   *       
	DB	%00000000		;           
	
				; --- Image "%" ---
POU_IMG	DB	%00000000		;           
	DB	%10010000		;   *  *    
	DB	%00100000		;     *     
	DB	%01000000		;    *      
	DB	%10010000		;   *  *    
	DB	%00000000		;           

				; --- Image "=" ---
EQU_IMG	DB	%00000000		;           
	DB	%11110000		;   ****    
	DB	%00000000		;           
	DB	%11110000		;   ****    
	DB	%00000000		;           
	DB	%00000000		;           

				; --- Afficher la valeur hexadecimal ---
CHIFFRES	DB	#00		; Le chiffre des centaines
	DB	#00		; Le chiffre des dizaines
	DB	#00		; Le chiffre des unites
	
				; --- Le calcul ---
CALC_A_DP	DB	#00		; Valeur de A
CALC_B_DP	DB	#00		; Valeur de B
CALC_R_DP	DB	#00		; Le resultat

				; --- Le premier calcul (/) ---
MAIN	LD	I, DIV_A_00	; On recupere l'emplacement de la valeur A
	LD	R0, I		; On place la valeur dans le registre 0
	LD	R1, R0		; On place la valeur du registre 0 vers le registre 1
	LD	I, DIV_B_00	; On recupere l'emplacement de la valeur B
	LD	R0, I		; On place la valeur dans le registre 0
	LD	R2, R0		; On place la valeur du registre 0 vers le registre 2
	CALL	DIV_ASM		; On fait la division
	LD	R0, R3		; On place la valeur du resultat du registre 3 vers le registre 0
	LD	I, DIV_R_00	; On recupere l'emplacement de la valeur du resultat
	LD	I, R0		; On place la valeur dans la ram
        
				; --- Afficher le calcul ---
DISP_1	LD	RE, 1		; On place 1 dans le registre E (Position en X)
	LD	RD, 1		; On place 1 dans le registre D (Position en Y)
	LD	I, DIV_A_00	; On recupere l'emplacement de la valeur A
	LD	R0, I		; On place la valeur dans le registre 0
	LD	I, CALC_A_DP	; On recupere l'emplacement de calcul de la valeur A
	LD	I, R0		; On enregistre la valeur de calcul
	LD	I, DIV_B_00	; On recupere l'emplacement de la valeur B
	LD	R0, I		; On place la valeur dans le registre 0
	LD	I, CALC_B_DP	; On recupere l'emplacement de calcul de la valeur B
	LD	I, R0		; On enregistre la valeur de calcul
	LD	I, DIV_R_00	; On recupere l'emplacement de la valeur du resultat
	LD	R0, I		; On place la valeur dans le registre 0
	LD	I, CALC_R_DP	; On recupere l'emplacement de calcul du resultat
	LD	I, R0		; On enregistre la valeur de calcul
	CALL	DISP_DI		; Afficher la division
	
				; --- Le deuxieme calcul (%) ---
cal_0	LD	I, DIV_A_00	; On recupere l'emplacement de la valeur A
	LD	R0, I		; On place la valeur dans le registre 0
	LD	R1, R0		; On place la valeur du registre 0 vers le registre 1
	LD	I, DIV_B_00	; On recupere l'emplacement de la valeur B
	LD	R0, I		; On place la valeur dans le registre 0
	LD	R2, R0		; On place la valeur du registre 0 vers le registre 2
	CALL	DIV_RES		; On fait la division (on recupere le reste)
	LD	R0, R3		; On place la valeur du resultat du registre 3 vers le registre 0
	LD	I, RES_R_00	; On recupere l'emplacement de la valeur du resultat
	LD	I, R0		; On place la valeur dans la ram
        
				; --- Afficher le calcul ---
DISP_0	LD	RE, 1		; On place 1 dans le registre E (Position en X)
	ADD	RD, 7		; RD=RD+7 (RD=1+7=8)(Position en Y)
	LD	I, DIV_A_00	; On recupere l'emplacement de la valeur A
	LD	R0, I		; On place la valeur dans le registre 0
	LD	I, CALC_A_DP	; On recupere l'emplacement de calcul de la valeur A
	LD	I, R0		; On enregistre la valeur de calcul
	LD	I, DIV_B_00	; On recupere l'emplacement de la valeur B
	LD	R0, I		; On place la valeur dans le registre 0
	LD	I, CALC_B_DP	; On recupere l'emplacement de calcul de la valeur B
	LD	I, R0		; On enregistre la valeur de calcul
	LD	I, RES_R_00	; On recupere l'emplacement de la valeur du resultat
	LD	R0, I		; On place la valeur dans le registre 0
	LD	I, CALC_R_DP	; On recupere l'emplacement de calcul du resultat
	LD	I, R0		; On enregistre la valeur de calcul
	CALL	DISP_RE		; Afficher le reste de la division
	
				; --- Le troisieme calcul (/) ---
cal_2	LD	I, DIV_A_01	; On recupere l'emplacement de la valeur A
	LD	R0, I		; On place la valeur dans le registre 0
	LD	R1, R0		; On place la valeur du registre 0 vers le registre 1
	LD	I, DIV_B_01	; On recupere l'emplacement de la valeur B
	LD	R0, I		; On place la valeur dans le registre 0
	LD	R2, R0		; On place la valeur du registre 0 vers le registre 2
	CALL	DIV_ASM		; On fait la division
	LD	R0, R3		; On place la valeur du resultat du registre 3 vers le registre 0
	LD	I, DIV_R_01	; On recupere l'emplacement de la valeur du resultat
	LD	I, R0		; On place la valeur dans la ram
	
				; --- Afficher le calcul ---
DISP_2	LD	RE, 1		; On place 1 dans le registre E (Position en X)
	ADD	RD, 7		; RD=RD+7 (RD=8+7=15)(Position en Y)
	LD	I, DIV_A_01	; On recupere l'emplacement de la valeur A
	LD	R0, I		; On place la valeur dans le registre 0
	LD	I, CALC_A_DP	; On recupere l'emplacement de calcul de la valeur A
	LD	I, R0		; On enregistre la valeur de calcul
	LD	I, DIV_B_01	; On recupere l'emplacement de la valeur B
	LD	R0, I		; On place la valeur dans le registre 0
	LD	I, CALC_B_DP	; On recupere l'emplacement de calcul de la valeur B
	LD	I, R0		; On enregistre la valeur de calcul
	LD	I, DIV_R_01	; On recupere l'emplacement de la valeur du resultat
	LD	R0, I		; On place la valeur dans le registre 0
	LD	I, CALC_R_DP	; On recupere l'emplacement de calcul du resultat
	LD	I, R0		; On enregistre la valeur de calcul
	CALL	DISP_DI		; Afficher la division
	
				; --- Le quatrieme calcul (%) ---
cal_3	LD	I, DIV_A_01	; On recupere l'emplacement de la valeur A
	LD	R0, I		; On place la valeur dans le registre 0
	LD	R1, R0		; On place la valeur du registre 0 vers le registre 1
	LD	I, DIV_B_01	; On recupere l'emplacement de la valeur B
	LD	R0, I		; On place la valeur dans le registre 0
	LD	R2, R0		; On place la valeur du registre 0 vers le registre 2
	CALL	DIV_RES		; On fait la division (on recupere le reste)
	LD	R0, R3		; On place la valeur du resultat du registre 3 vers le registre 0
	LD	I, RES_R_01	; On recupere l'emplacement de la valeur du resultat
	LD	I, R0		; On place la valeur dans la ram
        
				; --- Afficher le calcul ---
DISP_3	LD	RE, 1		; On place 1 dans le registre E (Position en X)
	ADD	RD, 7		; RD=RD+7 (RD=15+7=22)(Position en Y)
	LD	I, DIV_A_01	; On recupere l'emplacement de la valeur A
	LD	R0, I		; On place la valeur dans le registre 0
	LD	I, CALC_A_DP	; On recupere l'emplacement de calcul de la valeur A
	LD	I, R0		; On enregistre la valeur de calcul
	LD	I, DIV_B_01	; On recupere l'emplacement de la valeur B
	LD	R0, I		; On place la valeur dans le registre 0
	LD	I, CALC_B_DP	; On recupere l'emplacement de calcul de la valeur B
	LD	I, R0		; On enregistre la valeur de calcul
	LD	I, RES_R_01	; On recupere l'emplacement de la valeur du resultat
	LD	R0, I		; On place la valeur dans le registre 0
	LD	I, CALC_R_DP	; On recupere l'emplacement de calcul du resultat
	LD	I, R0		; On enregistre la valeur de calcul
	CALL	DISP_RE		; Afficher le reste de la division
	
FIN	JP	FIN		; La fin du code

; --- Le premier calcul (division) ---
DIV_A_00	DB	255
DIV_B_00	DB	128
DIV_R_00	DB	0

; --- Le deuxieme calcul (le reste de la division) ---
RES_R_00	DB	0

; --- Le troisieme calcul (division) ---
DIV_A_01	DB	55
DIV_B_01	DB	5
DIV_R_01	DB	0

; --- Le quatrieme calcul (le reste de la division) ---
RES_R_01	DB	0
