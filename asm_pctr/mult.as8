; @author pctronique (progratronic) [NAULOT Ludovic]
	JP	MAIN		; Debut du code

				; --- La multiplication ---
MUL_ASM	LD	R3, 0		; On place 0 dans le registre 3
	LD	R4, 0		; On place 0 dans le registre 4
B_MULT	SNE	R2, R4		; Si le registre 2 != registre 4
	RET			; On retourne au code (si la condition est fausse).
	ADD	R3, R1		; R3=R3+R1
	ADD	R4, 1		; R4=R4+1
	JP	B_MULT		; On continue la multiplication.
	
				; --- Dessiner le la valeur en base 10 (a partir de sa valeur hexadecimal). ---
BCD_ASM	LD	R0, I		; Recupere la valeur hexadecimal dans le registre 0
	LD	R9, R0		; Place cette valeur dans le registre 9
	LD	I, CHIFFRES	; emplacement des trois chiffres
	BCD	R9		; convertie l'hexadecimal en 3 chiffres
	LD	R3, I		; Place les valeur dans les registres 0, 1 et 2
	
				; --- afficher le premier chiffre ---
	LD	F, R0		; la valeur a afficher
	DRW	RE, RD, 5		; Dessiner sur l'ecran le chiffre

				; --- afficher le deuxieme chiffre ---
	ADD	RE, 5		; Position en x => RE=RE+5
	LD	F, R1		; La valeur a afficher
	DRW	RE, RD, 5		; Dessiner sur l'ecran le chiffre

				; --- afficher le troisieme chiffre ---
	ADD	RE, 5		; Position en x => RE=RE+5
	LD	F, R2		; la valeur a afficher
	DRW	RE, RD, 5		; Dessiner sur l'ecran le chiffre
	RET			; On retourne au code.
	
				; --- Dessine l'equation de la multiplication ---
DISP_MU	LD	I, CALC_A_DP	; Recupere la valeur A (en hexadecimal)
	CALL	BCD_ASM		; Dessine la valeur A (en base 10)
	ADD	RE, 5		; RE=RE+5
	
	LD	I, MUL_IMG		; Recupere l'image "*"
	DRW	RE, RD, 5		; Dessine "*"
	ADD	RE, 5		; RE=RE+5
	
	LD	I, CALC_B_DP	; Recupere la valeur B (en hexadecimal)
	CALL	BCD_ASM		; Dessine la valeur B (en base 10)
	ADD	RE, 5		; RE=RE+5
	
	LD	I, EQU_IMG		; Recupere l'image "="
	DRW	RE, RD, 5		; Dessine "="
	ADD	RE, 5		; RE=RE+5
	
	LD	I, CALC_R_DP	; Recupere le resultat (en hexadecimal)
	CALL	BCD_ASM		; Dessine le resultat (en base 10)
	RET			; Revenir au code

				; --- Image "*" ---
MUL_IMG	DB	%00000000		;           
	DB	%10010000		;   *  *    
	DB	%01100000		;    **     
	DB	%01100000		;    **     
	DB	%10010000		;   *  *    
	DB	%00000000		;           

				; --- Image "=" ---
EQU_IMG	DB	%00000000		;           
	DB	%11110000		;   ****    
	DB	%00000000		;           
	DB	%11110000		;   ****    
	DB	%00000000		;           
	DB	%00000000		;           

				; --- Afficher la valeur hexadecimal ---
CHIFFRES	DB	#00		; Le chiffre des centaines
	DB	#00		; Le chiffre des dizaines
	DB	#00		; Le chiffre des unites

				; --- Le calcul ---
CALC_A_DP	DB	#00		; Valeur de A
CALC_B_DP	DB	#00		; Valeur de B
CALC_R_DP	DB	#00		; Le resultat

				; --- Le premier calcul ---
MAIN	LD	I, MULT_A_00	; On recupere l'emplacement de la valeur A
	LD	R0, I		; On place la valeur dans le registre 0
	LD	R1, R0		; On place la valeur du registre 0 vers le registre 1
	LD	I, MULT_B_00	; On recupere l'emplacement de la valeur B
	LD	R0, I		; On place la valeur dans le registre 0
	LD	R2, R0		; On place la valeur du registre 0 vers le registre 2
	CALL	MUL_ASM		; On fait la multiplication
	LD	R0, R3		; On place la valeur du resultat du registre 3 vers le registre 0
	LD	I, MULT_R_00	; On recupere l'emplacement de la valeur du resultat
	LD	I, R0		; On place la valeur dans la ram
	
				; --- Afficher le calcul ---
	LD	RD, 1		; On place 1 dans le registre D (Position en Y)
DISP_1	LD	RE, 1		; On place 1 dans le registre E (Position en X)
	ADD	RD, 0		; RD=RD+0 (RD=1+0=1)(Position en Y)
	LD	I, MULT_A_00	; On recupere l'emplacement de la valeur A
	LD	R0, I		; On place la valeur dans le registre 0
	LD	I, CALC_A_DP	; On recupere l'emplacement de calcul de la valeur A
	LD	I, R0		; On enregistre la valeur de calcul
	LD	I, MULT_B_00	; On recupere l'emplacement de la valeur B
	LD	R0, I		; On place la valeur dans le registre 0
	LD	I, CALC_B_DP	; On recupere l'emplacement de calcul de la valeur B
	LD	I, R0		; On enregistre la valeur de calcul
	LD	I, MULT_R_00	; On recupere l'emplacement de la valeur du resultat
	LD	R0, I		; On place la valeur dans le registre 0
	LD	I, CALC_R_DP	; On recupere l'emplacement de calcul du resultat
	LD	I, R0		; On enregistre la valeur de calcul
	CALL	DISP_MU		; Afficher la multiplication
	
				; --- Le deuxieme calcul ---
CAL_2	LD	I, MULT_A_01	; On recupere l'emplacement de la valeur A
	LD	R0, I		; On place la valeur dans le registre 0
	LD	R1, R0		; On place la valeur du registre 0 vers le registre 1
	LD	I, MULT_B_01	; On recupere l'emplacement de la valeur B
	LD	R0, I		; On place la valeur dans le registre 0
	LD	R2, R0		; On place la valeur du registre 0 vers le registre 2
	CALL	MUL_ASM		; On fait la multiplication
	LD	R0, R3		; On place la valeur du resultat du registre 3 vers le registre 0
	LD	I, MULT_R_01	; On recupere l'emplacement de la valeur du resultat
	LD	I, R0		; On place la valeur dans la ram
	
				; --- Afficher le calcul ---
DISP_2	LD	RE, 1		; On place 1 dans le registre E (Position en X)
	ADD	RD, 7		; RD=RD+7 (RD=1+7=8)(Position en Y)
	LD	I, MULT_A_01	; On recupere l'emplacement de la valeur A
	LD	R0, I		; On place la valeur dans le registre 0
	LD	I, CALC_A_DP	; On recupere l'emplacement de calcul de la valeur A
	LD	I, R0		; On enregistre la valeur de calcul
	LD	I, MULT_B_01	; On recupere l'emplacement de la valeur B
	LD	R0, I		; On place la valeur dans le registre 0
	LD	I, CALC_B_DP	; On recupere l'emplacement de calcul de la valeur B
	LD	I, R0		; On enregistre la valeur de calcul
	LD	I, MULT_R_01	; On recupere l'emplacement de la valeur A
	LD	R0, I		; On place la valeur dans le registre 0
	LD	I, CALC_R_DP	; On recupere l'emplacement de calcul du resultat
	LD	I, R0		; On enregistre la valeur de calcul
	CALL	DISP_MU		; Afficher la multiplication
	
FIN	JP	FIN		; La fin du code

; --- Le premier calcul ---
MULT_A_00	DB	47
MULT_B_00	DB	5
MULT_R_00	DB	0

; --- Le deuxieme calcul ---
MULT_A_01	DB	20
MULT_B_01	DB	10
MULT_R_01	DB	0
